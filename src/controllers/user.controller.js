import { asyncHandler } from "../utils/asyncHandler.js";
import { ApiError } from "../utils/ApiError.js";
import { User } from "../models/user.model.js";
import { uploadOnCloudinary } from "../utils/cloudinary.js";
import { ApiResponse } from "../utils/ApiResponse.js";

const registerUser = asyncHandler(async (req, res) => {

    // steps 
    // get user details from frontend
    // validation - not empty
    // check if user alreasy exists - username, email
    // check for images, check for avatar
    // upload them to cloudinary 
    // create user object - create entry in db
    // remove password and refresh token field from response
    // check for user creation
    // return response

    const { fullName, email, username, password } = req.body
    console.log("Email :", email);

    // validation code 
    // checking if any of the field is not empty using some 
    // some method iterates through each field and checks whether it is not empty
    // you can do this by normal if method also 
    if (
        [fullName, email, username, password].some((field) => field?.trim() === "")

    ) {
        throw new ApiError(400, "All Field are required");

    }

    // check if user already exists 
    // Now we have imported user model in this to check whether the user with same username and email
    // exists using findOne method of mongoose 

    const existedUser = User.findOne(
        {
            $or: [{ username }, { email }]
        }
    );

    if (existedUser) {
        throw new ApiError(409, "User with email or username already exists");
    }

    // check for avatar image and cover image
    // now in this as we have added an middleware where we are adding avatar and coverImage
    // using multer we are getting its properties using req.files like originalName, path
    // so using that we are checking whether avatar file exists

    const avatarLocalPath = req.files?.avatar[0]?.path;
    const coverImageLocalPath = req.files?.coverImage[0]?.path;

    if (!avatarLocalPath) {
        throw new ApiError(400, "Avatar file is required");
    }

    // upload them to cloudinary
    const avatar = await uploadOnCloudinary(avatarLocalPath);
    const coverImage = await uploadOnCloudinary(coverImageLocalPath);

    // checking whether it is uploaded properly in cloudinary
    if (!avatar) {
        throw new ApiError(400, "Avatar file is required");
    }

    //  create user object - create entry in db

    const user = await User.create(
        {
            fullName,
            avatar: avatar.url,
            coverImage: coverImage?.url || "",
            email,
            password,
            username: username.toLowerCase()
        }
    )

    // Now we will do 2 things at same time
    // first we will check whether the user has been added properly and
    // secondly we will remove password and refreshToken field
    // _id is autogenerated by mongodb and we are checking whether that with that id any user exists or not
    // and using select we are removing password and refreshToken from the data createdUser

    const createdUser = await User.findById(user._id).select(
        "-password -refreshToken"
    )

    if (!createdUser) {
        throw new ApiError(500, "Something went wrong while registering the user");
    }


    // Now finally we are sending the final success response

    return res.status(201).json(
        new ApiResponse(200, createdUser, "User registered successfully")
    )


});

export { registerUser }